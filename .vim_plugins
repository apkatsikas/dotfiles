"###############################################3
"## Plugin stuff
"###############################################3
  " Vundle Plugins Setup
  " set the runtime path to include Vundle and initialize
  set rtp+=~/.vim/bundle/Vundle.vim
  call vundle#begin()
  " alternatively, pass a path where Vundle should install plugins
  "call vundle#begin('~/some/path/here')

  " let Vundle manage Vundle, required
  Plugin 'VundleVim/Vundle.vim'

  " Examples:
  " Plugin 'tpope/vim-fugitive'
  " Plugin 'git://git.wincent.com/command-t.git'
  " Plugin 'file:///home/gmarik/path/to/plugin'
  " Plugin 'rstacruz/sparkup', {'rtp': 'vim/'}
  """""""""""""""""""""""""""""""""""""""""""
  "" Install Vim plugins with Vundle here
  "vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
" Install plugins here.
" They can be easily installed without entering Vim by running:
" vim +PluginInstall +qall
Plugin 'AndrewRadev/splitjoin.vim'
Plugin 'ConradIrwin/vim-bracketed-paste'    " Automatic set paste when pasting. which is nice.
Plugin 'JamshedVesuna/vim-markdown-preview'    " Preview markdown from vim in browser
Plugin 'altercation/vim-colors-solarized'     " Pleasant colors
Plugin 'christoomey/vim-sort-motion'
Plugin 'cspeterson/vim-convert'	" Unit conversion
Plugin 'elzr/vim-json'           " Better than standard javascript highlighting
Plugin 'godlygeek/tabular'         " Aligns text
Plugin 'iamcco/markdown-preview.vim'       " Md preview with commands MarkdownPreview and MarkdownPreviewStop
Plugin 'jeetsukumaran/vim-indentwise'
Plugin 'kana/vim-textobj-entire' " Requires kana/vim-textobj-user
Plugin 'kana/vim-textobj-line' " Requires kana/vim-textobj-use
Plugin 'kana/vim-textobj-user'
Plugin 'kshenoy/vim-signature' " Show vim placemarks in sidebar
Plugin 'michaeljsmith/vim-indent-object'
Plugin 'othree/html5.vim'
Plugin 'pangloss/vim-javascript'
Plugin 'rodjek/vim-puppet'
Plugin 'scrooloose/nerdtree'
Plugin 'tmhedberg/SimpylFold'  " smarter code folding
Plugin 'tmhedberg/matchit'
Plugin 'tpope/vim-commentary'
Plugin 'tpope/vim-endwise'
Plugin 'tpope/vim-fugitive'
Plugin 'tpope/vim-liquid'
Plugin 'tpope/vim-surround'        " Easily work with surrounding objects eg parens, quotes, tags
Plugin 'vim-ruby/vim-ruby'
Plugin 'vim-scripts/ReplaceWithRegister'
Plugin 'vim-syntastic/syntastic'

  "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  "" End list of plugins to install/manage
  """""""""""""""""""""""""""""""""""""""""""
  " All of your Plugins must be added before the following line
  call vundle#end()            " required
  filetype plugin indent on    " required
  " To ignore plugin indent changes, instead use:
  "filetype plugin on
  "
  " Brief help
  " :PluginList       - lists configured plugins
  " :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
  " :PluginSearch foo - searches for foo; append `!` to refresh local cache
  " :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
  "
  " see :h vundle for more details or wiki for FAQ
  " Put your non-Plugin stuff after this line


"###############################################3
"# vim-markdown-preview
"###############################################3
let vim_markdown_preview_github=1

"###############################################3
"# NerdTREE file browser
"###############################################3
map <C-f> :NERDTreeToggle<CR>  " Ctrl+f toggles file pane

"###############################################3
"# vim-json
"###############################################3
" If this is left on (default), the editor only shows the quotes around keys and values
" for the active line
"let g:vim_json_syntax_conceal = 0

"###############################################3
"# vim-fugitive
"###############################################3
set diffopt+=vertical

"###############################################3
"# Markdown Preview
"###############################################3
:command! Md MarkdownPreview
:command! Mds MarkdownPreviewStop

"###############################################3
"# Theming
"###############################################3
syntax enable
let g:solarized_termcolors=256
colorscheme solarized
" Toggle dark/light colors
call togglebg#map("<F5>")
" now set it so it doesn't do that awful ugly blocky coloring behind text
" (this needs to be after the syntax line above)
hi Normal ctermbg=NONE

"###############################################3
"# Snytax
"###############################################3
"# Syntax highlighting options for Syntastic plugin
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0
let g:syntastic_python_checkers = ['python3']
