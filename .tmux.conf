# This is my very particular tmux.conf. It includes not only my
# idiosynchratic settings in general, but also has a bunch of work
# put into working equally well even with older versions of Tmux
# which I'm stuck using in some places. If you can avoid this
# complication, (the version conditionals), I highly recommend
# doing so.
#
# This configuration file relies upon some things...
#
# # Environment Variables
#
# * TMUX_VERSION
# * TMUX_CONFDIR
#
# # External commands
#
# * $TMUX_CONFDIR/bin/tmux-newwin
# * $TMUX_CONFDIR/bin/tmux-send-keys-to-all-panes
#

# Environment variables
set-option -g update-environment " PWD"

# General
set-option -g mode-keys vi
set-option -g xterm-keys on
set-option -g default-terminal "screen-256color"
set-option -g xterm-keys on
set-option -g set-titles on

# Prefixes
set-option -g prefix C-a

# Window/split creation
unbind '"'
unbind %
# ... and manipulating the paths into which they open
# Tmux <1.9 seems to have no good options other than setting the whole session path
if-shell '[ "$(echo "$TMUX_VERSION < 1.9" | bc)" = 1 ]' \
  "bind-key c run-shell \"$TMUX_CONFDIR/.tmux/bin/tmux-newwin $TMUX_VERSION\"; \
   bind-key C-c set-option default-path '' \\; new-window; \
   bind-key \\ split-window -v; \
   bind-key | split-window -h"
# Tmux >1.9 no longer has default-path but does have a bunch of other better options
if-shell '[ "$(echo "$TMUX_VERSION >= 1.9" | bc)" = 1 ]' \
  "bind-key c run-shell \"$TMUX_CONFDIR/.tmux/bin/tmux-newwin $TMUX_VERSION\"; \
   bind-key C-c new-window -c \"#{pane_current_path}\"; \
   bind-key \\ split-window -v -c \"#{pane_current_path}\"; \
   bind-key | split-window -h -c \"#{pane_current_path}\""

# Navigation - windows
bind-key C-a last-window
bind-key a last-window
bind-key -r C-p previous-window
bind-key -r C-n next-window
bind-key -n S-Left previous-window
bind-key -n S-Right next-window
bind-key -r S-Left swap-window -t -1
bind-key -r S-Right swap-window -t +1

# Navigation - panes
bind-key -n M-Left select-pane -L
bind-key -n M-Right select-pane -R
bind-key -n M-Up select-pane -U
bind-key -n M-Down select-pane -D
# Swap current pane up and down the pane list, allowing repetition
bind-key -r M-PageUp swap-pane -U
bind-key -r M-PageDown swap-pane -D

# Copy/paste
# Behave like vim, more or less sorta
bind-key v copy-mode
bind-key P paste-buffer
# bind-key syntax changed in 2.4
if-shell '[ "$(echo "$TMUX_VERSION < 2.4" | bc)" = 1 ]' \
  "bind-key -t vi-copy v begin-selection; \
   bind-key -t vi-copy C-v rectangle-toggle; \
   bind-key -t vi-copy y copy-selection; \
   bind-key -t vi-copy Y copy-pipe 'xclip -in -selection clipboard'"
# Newer versions
if-shell '[ "$(echo "$TMUX_VERSION >= 2.4" | bc)" = 1 ]' \
  "bind-key -T copy-mode-vi v send-keys -X begin-selection; \
   bind-key -T copy-mode-vi V send-keys -X select-line; \
   bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle; \
   bind-key -T copy-mode-vi y send-keys -X copy-selection; \
   bind-key -T copy-mode-vi Y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'"

# Misc
# Reload config
bind-key r source-file "$TMUX_CONFDIR/.tmux.conf" \; display-message "Reloaded $TMUX_CONFDIR/tmux.conf"
bind S command-prompt -p "Keys to send to all session  panes:" \
  "run-shell \"$TMUX_CONFDIR/.tmux/bin/tmux-send-keys-to-all-panes %1\""

# Statusbar
set-option -g status-bg colour32
set-option -g status-fg black

# Nesting
# This whole rigamarole is based heavily upon the article [Nested Tmux](http://stahlke.org/dan/tmux-nested/) by Dan Stahlke.
#
# # Caveats:
#
# * The inner session by this method will not show the "nested" status bar color scheme until one hits the switch key combo for the first time.
# * bind-keys is always universal across sessions, so any sessions aside from the parent and child will get wonky in terms of keybindings.
# * The server-universality of key bindings also means nesting a tmux session on the same server will cause some issues with root-table key bindings. Namely here, the S-{Left,Right} and M-{L,R,U,D} root table bindings will turn off in the outer when shifting control to the inner, but the inner will not pick it up as they share key tables. This doesn't affect the prefix table because turn the prefix on or off as we switch nest level.
# * This method cannot handle nesting more than one layer deep.
bind -n M-F11 set-option status-bg colour81 \; set-option status-fg colour7
bind -n M-F12 set-option status-bg colour32 \; set-option status-fg black
bind -n S-Up \
  send-keys M-F12 \; \
  set-option status-bg colour81 \; set-option status-fg colour7 \; \
  unbind -n S-Left \; \
  unbind -n S-Right \; \
  unbind -n M-Left \; \
  unbind -n M-Right \; \
  unbind -n M-Up \; \
  unbind -n M-Down \; \
  set-option prefix C-b
bind -n S-Down \
  send-keys M-F11 \; \
  set-option status-bg colour32 \; set-option status-fg black \; \
  bind-key -n S-Left previous-window \; \
  bind-key -n S-Right next-window \; \
  bind-key -n M-Left select-pane -L \; \
  bind-key -n M-Right select-pane -R \; \
  bind-key -n M-Up select-pane -U \; \
  bind-key -n M-Down select-pane -D \; \
  set-option prefix C-a

# Plugin manager
if-shell '[ "$(echo "$TMUX_VERSION >= 1.9" | bc)" = 1 ]' \
  "run-shell -b \"$TMUX_CONFDIR/.tmux/plugins/tpm/tpm\""
# Individual plugins
if-shell '[ "$(echo "$TMUX_VERSION >= 1.9" | bc)" = 1 ]' \
  "bind-key j display-message 'ffffff'; \
   set-option -g @plugin 'tmux-plugins/tmux-continuum'; \
   set-option -g @plugin 'tmux-plugins/tmux-open'; \
   set-option -g @plugin 'tmux-plugins/tmux-resurrect'"

# Settings re plugins
if-shell '[ "$(echo "$TMUX_VERSION >= 1.9" | bc)" = 1 ]' \
  "set -g @continuum-save-interval '2'; \
   set -g @resurrect-strategy-vim 'session'"
